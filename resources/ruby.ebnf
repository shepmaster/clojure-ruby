<program> = statement*
<statement> = <[ws]> (flow_control | literal | var_ref | method_call | grouping) <[ws]>
<grouping> = <"("> statement <")">
var_ref = id

(* naked calls have higher precedence than infix, so we use negative lookahead *)
<method_call> = method_call_args |
                method_call_infix |
                method_call_bracket |
                !(method_call_infix | method_call_args) method_call_naked

method_call_args    = statement <"."> id <"("> statement (<","> statement)* <")">
method_call_infix   = statement infix_symbol statement
method_call_bracket = statement <"["> statement <"]">
method_call_naked   = statement <"."> id

<infix_symbol> = "+=" | "-=" | "<" | "=" | "==" | "!=" | "&&"

<flow_control> = if | while | until | case
if             = <"if"> statement program (<"elsif"> statement program)* <"end">
while          = <"while"> statement program <"end">
until          = <"until"> statement program <"end">
case           = <"case"> statement (<"when"> statement program)+ <"end">
keyword        = "if" | "while" | "until" | "case" | "when" | "end"

<id>      = !(literal | keyword) #"\w+"
ws        = #"\s+"
<literal> = string | number
number    = #"\d+"
string    = <'"'> #"[^\"]+" <'"'>
