<program> = statement*
<statement> = S method_call_infix_x S

<method_call_infix_x> = method_call_infix | method_call_x
method_call_infix     = method_call_infix_x S infix_symbol S method_call_infix_x
<infix_symbol>        = "+=" | "-=" | "<" | "==" | "!=" | "&&"

<method_call_x>                = method_call |
                                 method_call_bracket |
                                 method_call_bracket_assignment |
                                 the_rest
method_call                    = method_call_x <"."> id <"("> [statement (<","> statement)*] <")">
method_call_bracket            = method_call_x <"["> statement <"]">
method_call_bracket_assignment = method_call_x <"["> statement <"]"> assignment_rhs

<the_rest> = assignment | flow_control | literal | var_ref | grouping

assignment       = id assignment_rhs
<assignment_rhs> = S <"="> S statement

<flow_control> = if | while | until | case
if             = <"if"> statement program (<"elsif"> statement program)* <"end">
while          = <"while"> statement program <"end">
until          = <"until"> statement program <"end">
case           = <"case"> statement (<"when"> statement program)+ <"end">
keyword        = "if" | "elsif" | "while" | "until" | "case" | "when" | "end"

<literal> = string | number
var_ref = id
<grouping> = <"("> statement <")">

<id>      = !(literal | keyword) #"\w+"

<S>       = <[ws]>
ws        = #"\s+"

number    = #"\d+"
string    = <'"'> #"[^\"]+" <'"'>
